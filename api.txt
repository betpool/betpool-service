Система принятия ставок на спортивные мероприятия

Есть список событий (events), у каждого события есть набор исходов (outcomes).
Букмейкер может добавлять и редактировать события и исходы, пользователь может только просматривать.
Пользователь может делать ставки (bets) на исходы.

Коэффициенты (odds) на различные исходы могут меняться с течением времени (извне или благодаря алгоритмам внутри системы),
но для конкретной ставки, добавленной пользователем в определенный момент времени пересчитываться не будут.

Http status codes are not listed !!!

Endpoints:
-------- Bookmaker part --------
    /events:
        GET - get events collection:
			Request: {}
			Response:
            {
				"links" : {
					"self" : "/events"
					"event.create" : "/events"
				}
				"items" : [
					{
						"links" : {
							"self" : "/events/1000" // it's for HATEOAS
						}
						"id" : "/events/1000" // it's an ID
						"name" : "Manchester United - Chelsea"
						"date" : timestamp
					},
					...
				]
			}
		POST - create event:
            Request:
			{
				"name" : "Manchester United - Chelsea"
				"description" : "some description of event"
				"eventStartTs" : timestamp
				"betPoolCloseTs": timestamp
			}
            Response:
            {
                "links" : {
                    "self" : "/events/1000"
                }
                "id" : "/events/1000"
            }

    /events/[event-id]
        GET - get event:
			Request: {}
			Response:
			{
				"links": {
					"self" : "/events/1000"
					"collection" : "/events"
                    "event.outcomes" : "/events/1000/outcomes"
					"event.update" : "/events/1000"
					"event.delete" : "/events/1000"
				}
				"id" : "/events/1000"
				"name" : "Manchester United - Chelsea"
				"description" : "some description of event"
				"eventStartTs" : timestamp
                "betPoolCloseTs": timestamp
			}
        PUT - update event
			Request:
			{
				"id" : "/events/1000"
				"name" : "Manchester United - Chelsea (updated name)"
				"description" : "updated description of event"
				"eventStartTs" : timestamp
                "betPoolCloseTs": timestamp
			}
			Response: {}
		DELETE - delete event
			Request: 
            {
                "id" : "/events/1000"
            }
			Response: {}

	/events/[event-id]/outcomes
        GET - get all outcomes for the given event
			# similar to /events
		POST - create outcome for the given event
			# similar to /events
	
	/events/[event-id]/outcomes/[outcome-id]
		GET - get outcome:
			Request: {}
			Response:
			{
				"links" : {
					"self" : "/events/1000/outcomes/1"
                    "outcome.event" : "/events/1000"
				}
				"id" : "/events/1000/outcomes/1"
				"name" : "Manchester win"
				"currentOdd" : "1:3"
			}
		PUT - update outcome:
			# similar to event update
		DELETE - delete outcome:
			# similar to event delete

-------- Bookmaker part end --------

-------- User part --------
    /events/[event-id]/bets
        GET - get bets for the given event, made by current user
			Request: {}
			Response: {
				# list of bets
			}
        POST - make a bet to outcome given
			Request: {
                "value" : 100.0
                "confirmedOdd" : "1:3"
                "createdTs" : timestamp
			}
			Response: {
				"id" : "/events/1/bets/1"
			}

	/events/[event-id]/bets/[bet-id]
		GET - get info about bet:
			Request: {}
			Response: {
				"links" : {
					"self" : "/events/1000/bets/1"
                    "bet.outcome" : "/events/1000/outcome/1"
				}
                "id" : "/events/1000/bets/1"
				"value" : 100.0
				"confirmedOdd" : "1:3"
				"createdTs" : timestamp
			}
-------- User part end --------